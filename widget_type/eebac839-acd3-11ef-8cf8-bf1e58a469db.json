{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "mini_card",
    "name" : "Mini Card",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 3.5,
      "resources" : [ ],
      "templateHtml" : " <div class=\"mainDiv\">\n    <div class=\"leftBlock\">\n        <img [src]=\"('/api/images/tenant/' + imgUrl) | image | async\" />\n    </div>\n    <div class=\"rightBlock\">\n        <div class=\"rightBlock\">\n            <span class=\"title\">{{title}}</span>\n            <span class=\"value\">{{value}}</span>\n        </div>\n    </div>\n</div>",
      "templateCss" : ".mainDiv {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    /*justify-content: space-between;*/\n    align-items: center;\n}\n\n.leftBlock {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.rightBlock {\n    display: flex;\n    flex-direction: column;\n    margin-left: 5px;\n}\n\n.title {\n    color: #344054;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 24px;\n    text-align: left;\n}\n\n.value {\n    font-size: 28px;\n    font-weight: 600;\n    line-height: 36px;\n    text-align: left;\n    color: #0C111D;\n}\n",
      "controllerScript" : "self.onInit = function() {\n    utils = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('utils'));\n    settings = utils.deepClone(self.ctx.settings) || {};\n    \n    self.ctx.$scope.title = settings.title;\n    self.ctx.$scope.imgUrl = settings.imgUrl;\n\n    self.ctx.$scope.value = \"40.1\";\n}    \n\nself.onDataUpdated = function() {\n    self.ctx.$scope.value = 0;\n    \n    if(self.ctx.data[0].data[0]){\n        if(self.ctx.data[0].data[0][1]){\n            self.ctx.$scope.value = self.ctx.data[0].data[0][1];\n        }\n    }\n    \n    self.ctx.detectChanges();\n}\n\nself.actionSources = function() {\n    return {\n        'elementClick': {\n            name: 'widget-action.element-click',\n            multiple: true\n        }\n    };\n}\n\nself.onResize = function() {\n  \n}\n\nself.onDestroy = function() {\n}\n",
      "settingsSchema" : "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"title\": {\n                \"title\": \"Title\",\n                \"type\": \"string\"\n            },\n            \"imgUrl\": {\n                \"title\": \"Image URL\",\n                \"type\": \"string\"\n            }\n        },\n        \"required\": []\n    },\n    \"form\": [\n        \"title\",\n        \"imgUrl\"\n    ]\n}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"title\":\"Current lat, long\"},\"title\":\"Mini Card\",\"dropShadow\":false,\"enableFullscreen\":false,\"enableDataExport\":false,\"borderRadius\":\"6px\",\"widgetStyle\":{\"border\":\"1px solid #E6E6E6\"},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "eebac839-acd3-11ef-8cf8-bf1e58a469db"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}