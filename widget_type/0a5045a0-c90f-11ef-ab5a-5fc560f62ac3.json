{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "asset_details_widget",
    "name" : "Asset details widget",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div class=\"mainDiv\">\n    <div class=\"imageBlock\"> {{imageBlock}} </div>\n    <div class=\"infoBlock\">\n        <div class=\"row between\">\n            <span class=\"key\">Working status</span>\n            <span *ngIf=\"!isActive\" class=\"inactive\">INACTIVE</span>\n            <span *ngIf=\"isActive\" class=\"active\">ACTIVE</span>\n        </div>\n        <div class=\"row between\">\n            <span class=\"key\">Assigned device</span>\n            <b>{{assignedDevice}}</b>\n        </div>\n        <div class=\"row between\">\n            <span class=\"key\">Signal</span>\n            <img src=\"/api/images/public/tLokfg0I4nb2ETooeShOrH6UmPjdDQHZ\" alt=\"signal4.png\" />\n        </div>\n    </div>\n    <!--<div class=\"descriptionBlock\">-->\n    <!--    <span class=\"title\">Description</span>-->\n    <!--    <div class=\"row\">-->\n    <!--        <div class=\"childRow\">Type: <span class=\"customB\">${data[0].Type}</span></div>-->\n    <!--        <div class=\"childRow\">MN: <span class=\"customB\">${data[0].modelNumber}</span></div>-->\n    <!--        <div class=\"childRow\">SN: <span class=\"customB\">${data[0].serialNumber}</span></div>-->\n    <!--    </div>-->\n    <!--    <span class=\"text\">${data[0].description}</span>-->\n    <!--</div>-->\n</div>",
      "templateCss" : ".mainDiv {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    gap: 15px;\n}\n\n.imageBlock {\n    /*padding: 20px;*/\n    /*height: 150px;*/\n    width: 100% !important;\n    height: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.infoBlock {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n}\n\n.row {\n    width: 100%;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    padding: 2px 0px;\n    gap: 20px;\n}\n\n.childRow {\n    gap: 5px;\n}\n\n.between {\n    justify-content: space-between;\n}\n\n.key {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 20px;\n    text-align: left;\n    color: #344054;\n}\n\n.descriptionBlock {\n    height: auto;\n    color: #344054;\n    display: flex;\n    flex-direction: column;\n}\n\n.deviceBlock {\n    height: auto;\n    color: #344054;\n    display: flex;\n    flex-direction: column;\n}\n\n.title {\n    color: #0C111D;\n    font-size: 24px;\n    font-weight: 600;\n    line-height: 32px;\n    text-align: left;\n}\n\n.text {\n    padding: 10px 0px;    \n}\n\n.customB {\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 24px;\n    letter-spacing: 0.01em;\n    text-align: left;\n    color: #344054;\n}\n\n.inactive {\n    color: #475467;\n    background-color: #EAECF0;\n    border-radius: 4px;\n    padding: 5px;\n    font-size: 12px;\n    font-weight: 600;\n    line-height: 16px;\n    text-align: left;   \n}\n\n.active {\n    color: #026AA2;\n    background-color: #E0F2FE;\n    border-radius: 4px;\n    padding: 5px;\n    font-size: 12px;\n    font-weight: 600;\n    line-height: 16px;\n    text-align: left;\n}\n",
      "controllerScript" : "self.onInit = function() {\n    let assignedDevice = \"No Data\";\n    \n    self.ctx.$scope.isActive = true;\n    self.ctx.$scope.assignedDevice = \"Device 1\";\n\n// if(data[0].assignedDevice && JSON.parse(data[0].assignedDevice)){\n//     assignedDevice = JSON.parse(data[0].assignedDevice).name;\n// } \n\n// let imageBlock = `<img style=\"width: 100%\" [src]=\"'/api/images/tenant/Device Image Container.png' | image | async\" />`;\n\n// if(data[0].image){\n//     imageBlock = `<img style=\"width: 90%\" src=\"${data[0].image}\"/>`;    \n// }\n\n// let signal1 = `<svg width=\"26\" height=\"16\" viewBox=\"0 0 26 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                 <rect x=\"0.5\" y=\"12\" width=\"4\" height=\"4\" rx=\"1\" fill=\"#B42318\"/>\n//                 <rect x=\"7.5\" y=\"8\" width=\"4\" height=\"8\" rx=\"1\" fill=\"#FEE4E2\"/>\n//                 <rect x=\"14.5\" y=\"4\" width=\"4\" height=\"12\" rx=\"1\" fill=\"#FEE4E2\"/>\n//                 <rect x=\"21.5\" width=\"4\" height=\"16\" rx=\"1\" fill=\"#FEE4E2\"/>\n//             </svg>`; \n\n// let signal2 = `<svg width=\"26\" height=\"16\" viewBox=\"0 0 26 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                 <rect x=\"0.5\" y=\"12\" width=\"4\" height=\"4\" rx=\"1\" fill=\"#DC6803\"/>\n//                 <rect x=\"7.5\" y=\"8\" width=\"4\" height=\"8\" rx=\"1\" fill=\"#DC6803\"/>\n//                 <rect x=\"14.5\" y=\"4\" width=\"4\" height=\"12\" rx=\"1\" fill=\"#FEF0C7\"/>\n//                 <rect x=\"21.5\" width=\"4\" height=\"16\" rx=\"1\" fill=\"#FEF0C7\"/>\n//             </svg>`;\n\n// let signal3 = `<svg width=\"26\" height=\"16\" viewBox=\"0 0 26 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                 <rect x=\"0.5\" y=\"12\" width=\"4\" height=\"4\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"7.5\" y=\"8\" width=\"4\" height=\"8\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"14.5\" y=\"4\" width=\"4\" height=\"12\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"21.5\" width=\"4\" height=\"16\" rx=\"1\" fill=\"#DCFAE6\"/>\n//             </svg>`;\n\n// let signal4 = `<svg width=\"26\" height=\"16\" viewBox=\"0 0 26 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                 <rect x=\"0.5\" y=\"12\" width=\"4\" height=\"4\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"7.5\" y=\"8\" width=\"4\" height=\"8\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"14.5\" y=\"4\" width=\"4\" height=\"12\" rx=\"1\" fill=\"#067647\"/>\n//                 <rect x=\"21.5\" width=\"4\" height=\"16\" rx=\"1\" fill=\"#067647\"/>\n//             </svg>`;\n            \n// let noSignal = `<div style=\"display: flex; align-items:center; gap: 2px;\">\n//                 <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                     <path d=\"M8.00001 1.33301C4.31334 1.33301 1.33334 4.31301 1.33334 7.99967C1.33334 11.6863 4.31334 14.6663 8.00001 14.6663C11.6867 14.6663 14.6667 11.6863 14.6667 7.99967C14.6667 4.31301 11.6867 1.33301 8.00001 1.33301ZM8.00001 13.333C5.06001 13.333 2.66668 10.9397 2.66668 7.99967C2.66668 5.05967 5.06001 2.66634 8.00001 2.66634C10.94 2.66634 13.3333 5.05967 13.3333 7.99967C13.3333 10.9397 10.94 13.333 8.00001 13.333ZM10.3933 4.66634L8.00001 7.05967L5.60668 4.66634L4.66668 5.60634L7.06001 7.99967L4.66668 10.393L5.60668 11.333L8.00001 8.93967L10.3933 11.333L11.3333 10.393L8.94001 7.99967L11.3333 5.60634L10.3933 4.66634Z\" fill=\"#667085\"/>\n//                 </svg> \n//                 <span style=\"font-weight: 500; color: #667085;\">No signal</span>\n//             </div>`;\n\n//     let signalSvg;\n    \n//     if(data[0].rssi && data[0].rssi <= -110){\n//         signalSvg = signal1;\n//     } else if(data[0].rssi && data[0].rssi > -110 && data[0].rssi <= -90){\n//         signalSvg = signal2;\n//     } else if(data[0].rssi && data[0].rssi > -90 && data[0].rssi <= -70){\n//         signalSvg = signal3;\n//     } else if(data[0].rssi && data[0].rssi >= -70){\n//         signalSvg = signal4;\n//     } else {\n//         signalSvg = noSignal;   \n//     }\n}\n\nself.onDataUpdated = function() {\n    self.ctx.data.forEach(x=>{\n        if(x.dataKey.name == \"assignedDevice\"){\n            if(x.data[0][1] && JSON.parse(x.data[0][1])){\n                self.ctx.$scope.assignedDevice = JSON.parse(x.data[0][1]).name;\n            }\n        }\n    })\n}\n\nself.onResize = function() {\n   \n}\n\nself.onDestroy = function() {\n}\n",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Attributes card\",\"dropShadow\":false,\"enableFullscreen\":false,\"enableDataExport\":false,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "0a5045a0-c90f-11ef-ab5a-5fc560f62ac3"
    },
    "scada" : false,
    "tags" : null
  },
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}