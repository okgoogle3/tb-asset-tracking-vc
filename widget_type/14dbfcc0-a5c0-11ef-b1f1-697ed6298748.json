{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "information_card",
    "name" : "Information card",
    "deprecated" : false,
    "image" : "tb-image;/api/images/tenant/2024-09-24_16-02.png",
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 3,
      "resources" : [ ],
      "templateHtml" : "<div class=\"form-container\" *ngIf=\"settings\">\n    <div class=\"header-panel\" *ngIf=\"settings.mainCardInfo\">\n        <div>\n            <div class=\"info-card-title\" *ngIf=\"settings.mainCardInfo.cardTitle\" [innerHtml]=\"settings.mainCardInfo.cardTitle\"></div>\n            <div class=\"main-value\" *ngIf=\"currentValue\" [innerHtml]=\"currentValue\"></div>\n        </div>\n        <div class=\"icon-wrapper\" [style]=\"'background-color : ' + settings.mainCardInfo.cardIconBackgroundColor\" *ngIf=\"settings.mainCardInfo.cardIcon\">\n            <div class=\"icon-container\">\n                <ng-container *ngIf=\"settings.mainCardInfo.cardIcon\" [ngTemplateOutlet]=\"parameterIcon\" [ngTemplateOutletContext]=\"{ iconName: settings.mainCardInfo.cardIcon, iconColor: settings.mainCardInfo.cardIconColor }\"></ng-container>\n            </div>\n        </div>\n    </div>\n    <div class=\"parameters-container\">\n        <div class=\"parameter-item\" *ngIf=\"settings.showLeftParameter && settings.leftParameter\">\n            <div class=\"parameter-label-container\" [ngClass]=\"{ 'reversed': settings.leftParameter.parameterIconPosition === 'Right' }\">\n                <ng-container *ngIf=\"settings.leftParameter.parameterIcon\" [ngTemplateOutlet]=\"parameterIcon\" [ngTemplateOutletContext]=\"{ iconName: settings.leftParameter.parameterIcon, iconColor: settings.leftParameter.parameterIconColor }\"></ng-container>\n                <div class=\"parameter-label\" *ngIf=\"settings.leftParameter.parameterLabel\" [innerHtml]=\"settings.leftParameter.parameterLabel\"></div>\n            </div>\n            <div class=\"parameter-value\" *ngIf=\"leftParam\" [innerHtml]=\"leftParam\"></div>\n        </div>\n        <div class=\"parameter-item\" *ngIf=\"settings.showRightParameter && settings.rightParameter\">\n            <div class=\"parameter-label-container\" [ngClass]=\"{ 'reversed': settings.rightParameter.parameterIconPosition === 'Right' }\">\n                 <ng-container *ngIf=\"settings.rightParameter.parameterIcon\" [ngTemplateOutlet]=\"parameterIcon\" [ngTemplateOutletContext]=\"{ iconName: settings.rightParameter.parameterIcon, iconColor: settings.rightParameter.parameterIconColor }\"></ng-container>\n                <div class=\"parameter-label\" *ngIf=\"settings.rightParameter.parameterLabel\" [innerHtml]=\"settings.rightParameter.parameterLabel\"></div>\n            </div>\n            <div class=\"parameter-value\" *ngIf=\"rightParam\" [innerHtml]=\"rightParam\"></div>\n        </div>\n    </div>\n</div> \n\n<ng-template #parameterIcon let-iconName=\"iconName\" let-iconColor=\"iconColor\">\n    <mat-icon [style]=\"'color: ' + iconColor\">{{iconName}}</mat-icon>\n</ng-template>",
      "templateCss" : ".form-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n}\n\n.header-panel {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n}\n\n.parameters-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.info-card-title {\n    color: #344054;\n    line-height: 24px;\n}\n\n.main-value {\n    color: #0C111D;\n    font-size: 28px;\n    font-weight: 600;\n    line-height: 36px;\n}\n\n.icon-wrapper {\n    padding: 10px;\n    border-radius: 50%;\n}\n\n.icon-container {\n    width: 20px;\n    height: 20px;\n}\n\n.icon-container mat-icon {\n    width: 20px;\n    height: 20px;\n    font-size: 20px;\n}\n\n.parameter-label {\n    color: #344054;\n    font-size: 14px;\n    line-height: 20px;\n}\n\n.parameter-value {\n    color: #0C111D;\n    font-size: 18px;\n    font-weight: 600;\n    line-height: 28px; \n}\n\n.parameter-label-container {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n}\n\n.parameter-label-container mat-icon {\n    width: 16px;\n    height: 16px;\n    font-size: 16px;\n}\n\n.parameter-item {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.reversed {\n    flex-direction: row-reverse;\n}",
      "controllerScript" : "function getObjectByLabel(arr, label) {\n    return arr.find((element) => element.dataKey.label === label);\n}\n\nself.onInit = function() {\n    let utils = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('utils'));\n    settings = utils.deepClone(self.ctx.settings) || {};\n    \n    self.ctx.$scope.settings = settings;\n}\n\nself.onDataUpdated = function() {\n    dataObj = {};\n    [\"leftParam\", \"rightParam\", \"currentValue\"].forEach((label) => {\n        const obj = getObjectByLabel(self.ctx.data, label);\n        if (obj && obj.data && obj.data.length) {\n            dataObj[label] = {\n                value: obj.data[0][1],\n                units: obj.dataKey.units ? obj.dataKey.units : \"\"\n            };\n        }\n    });\n    \n    if (dataObj.leftParam && dataObj.leftParam.value) {\n        self.ctx.$scope.leftParam = dataObj.leftParam.value + dataObj.leftParam.units;\n    }\n    \n    if (dataObj.rightParam && dataObj.rightParam.value) {\n        self.ctx.$scope.rightParam = dataObj.rightParam.value + dataObj.rightParam.units;\n    }\n    \n    if (dataObj.currentValue && dataObj.currentValue.value) {\n        self.ctx.$scope.currentValue = dataObj.currentValue.value + dataObj.currentValue.units;\n    }\n}\n\nself.onResize = function() {\n}\n\nself.onDestroy = function() {\n}\n",
      "settingsSchema" : "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"mainCardInfo\": {\n                \"title\": \"Main card information\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"cardTitle\": {\n                        \"title\": \"Card title\",\n                        \"type\": \"string\"\n                    },\n                    \"cardIcon\": {\n                        \"title\": \"Card icon\",\n                        \"type\": \"string\"\n                    },\n                    \"cardIconColor\": {\n                        \"title\": \"Card icon color\",\n                        \"type\": \"string\"\n                    },\n                    \"cardIconBackgroundColor\": {\n                        \"title\": \"Card icon background color\",\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"showLeftParameter\": {\n                \"title\": \"Show left parameter\",\n                \"type\": \"boolean\",\n                \"default\": true\n            },\n            \"leftParameter\": {\n                \"title\": \"Left parameter\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"parameterLabel\": {\n                        \"title\": \"Left parameter label\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIcon\": {\n                        \"title\": \"Left parameter label icon (optional)\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIconColor\": {\n                        \"title\": \"Left parameter icon color (optional)\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIconPosition\": {\n                        \"title\": \"Left parameter icon position\",\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"Right\",\n                            \"Left\"\n                        ]\n                    }\n                }\n            },\n            \"showRightParameter\": {\n                \"title\": \"Show right parameter\",\n                \"type\": \"boolean\",\n                \"default\": true\n            },\n            \"rightParameter\": {\n                \"title\": \"Right parameter\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"parameterLabel\": {\n                        \"title\": \"Right parameter label\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIcon\": {\n                        \"title\": \"Right parameter label icon (optional)\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIconColor\": {\n                        \"title\": \"Right parameter icon color (optional)\",\n                        \"type\": \"string\"\n                    },\n                    \"parameterIconPosition\": {\n                        \"title\": \"Right parameter icon position\",\n                        \"type\": \"string\",\n                        \"enum\": [\n                            \"Right\",\n                            \"Left\"\n                        ]\n                    }\n                }\n            }\n        }\n    },\n    \"form\": [\n        [\n            {\n                \"key\": \"mainCardInfo\",\n                \"items\": [\n                    {\"key\": \"mainCardInfo.cardTitle\"},\n                    {\"key\": \"mainCardInfo.cardIcon\"},\n                    {\n                        \"key\": \"mainCardInfo.cardIconColor\",\n                        \"type\": \"color\"\n                    },\n                    {\n                        \"key\": \"mainCardInfo.cardIconBackgroundColor\",\n                        \"type\": \"color\"\n                    }\n                ]\n            }\n        ],\n        [\n            {\"key\": \"showLeftParameter\"},\n            {\n                \"key\": \"leftParameter\",\n                \"items\": [\n                    {\"key\": \"leftParameter.parameterLabel\"},\n                    {\"key\": \"leftParameter.parameterIcon\"},\n                    {\n                        \"key\": \"leftParameter.parameterIconColor\",\n                        \"type\": \"color\"\n                    },\n                    {\"key\": \"leftParameter.parameterIconPosition\"}\n                ],\n                \"condition\": \"model.showLeftParameter === true\"\n            },\n            {\"key\": \"showRightParameter\"},\n            {\n                \"key\": \"rightParameter\",\n                \"items\": [\n                    {\"key\": \"rightParameter.parameterLabel\"},\n                    {\"key\": \"rightParameter.parameterIcon\"},\n                    {\n                        \"key\": \"rightParameter.parameterIconColor\",\n                        \"type\": \"color\"\n                    },\n                    {\"key\": \"rightParameter.parameterIconPosition\"}\n                ],\n                \"condition\": \"model.showRightParameter === true\"\n            }\n        ]\n    ],\n    \"groupInfoes\": [\n        {\n            \"formIndex\": 0,\n            \"GroupTitle\": \"Main card information\"\n        },\n        {\n            \"formIndex\": 1,\n            \"GroupTitle\": \"Parameters configuration\"\n        }\n    ]\n}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"20px\",\"settings\":{\"mainCardInfo\":{\"cardIcon\":\"device_thermostat\",\"cardTitle\":\"Alarms\",\"cardIconBackgroundColor\":\"#e0f2fe\",\"cardIconColor\":\"#0086c9\"},\"showLeftParameter\":true,\"showRightParameter\":true,\"leftParameter\":{\"parameterLabel\":\"Left parameter\",\"parameterIconPosition\":\"Left\",\"parameterIcon\":\"build\"},\"rightParameter\":{\"parameterLabel\":\"Left parameter\",\"parameterIconPosition\":\"Right\",\"parameterIcon\":\"build\",\"parameterIconColor\":\"#f44336\"}},\"title\":\"Attributes card\",\"showTitleIcon\":false,\"titleTooltip\":\"\",\"dropShadow\":false,\"enableFullscreen\":false,\"enableDataExport\":false,\"widgetStyle\":{\"border\":\"1px solid #D0D5DD\"},\"widgetCss\":\"\",\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"borderRadius\":\"12px\"}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "14dbfcc0-a5c0-11ef-b1f1-697ed6298748"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}